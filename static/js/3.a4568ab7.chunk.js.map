{"version":3,"sources":["components/findUsers/findUsers.module.css","components/findUsers/userCard.module.css","components/findUsers/pagination/pagination.module.css","components/findUsers/img/userUnknown.png","components/findUsers/pagination/pagination.tsx","components/findUsers/userCard.tsx","components/findUsers/findUsersContainer.tsx","components/findUsers/findUsers.tsx"],"names":["module","exports","Pagination","totalUsers","usersOnPage","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pagesArray","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","style","pageButtonsContainer","onClick","button","disabled","filter","page","map","pageButton","current","UserCard","React","memo","findUsers","setFollow","setUnfollow","isFollowingInProgress","cardContainer","user","wrapper","avatar_container","photo","src","photos","small","alt","followed","some","id","to","linkToProfile","user_description","left_description","name","right_description","prevProps","nextProps","UsersContainer","props","getUsers","this","isFetching","Component","FindUsersContainer","connect","state","getFindUsersState","getCurrentPageState","getTotalUsersState","getUsersOnPageState","getIsFetchingState","getIsFollowingInProgressState","FindUsers","container","left_container","right_container"],"mappings":"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","file":"static/js/3.a4568ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"findUsers_container__BL0gh\",\"left_container\":\"findUsers_left_container__1gDpi\",\"right_container\":\"findUsers_right_container__KQJ8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"userCard_wrapper__1fqIF\",\"cardContainer\":\"userCard_cardContainer__Su_k8\",\"avatar_container\":\"userCard_avatar_container__PbgRM\",\"photo\":\"userCard_photo__2w-o0\",\"linkToProfile\":\"userCard_linkToProfile__-skaa\",\"button\":\"userCard_button__1aAK8\",\"user_description\":\"userCard_user_description__eqbUa\",\"left_description\":\"userCard_left_description__3ZhjA\",\"right_description\":\"userCard_right_description__2jSbu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"pagination_button__3AOWi\",\"pageButton\":\"pagination_pageButton__3YXdX\",\"pageButtonsContainer\":\"pagination_pageButtonsContainer__2yrAK\",\"current\":\"pagination_current__15g-U\"};","export default __webpack_public_path__ + \"static/media/userUnknown.16df309a.png\";","import style from \"./pagination.module.css\"\r\nimport React, {ReactElement, useState} from \"react\"\r\nimport {IPaginationProps} from \"../../../types/types\"\r\n\r\n\r\nconst Pagination: React.FC<IPaginationProps> = ({\r\n                                                    totalUsers,\r\n                                                    usersOnPage,\r\n                                                    pageSize,\r\n                                                    onPageChanged,\r\n                                                    currentPage\r\n                                                }): ReactElement => {\r\n\r\n    let pagesCount = Math.ceil(totalUsers / usersOnPage);\r\n    let pagesArray = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pagesArray.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / pageSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * pageSize +1;\r\n    let rightPortionPageNumber = portionNumber * pageSize;\r\n\r\n    return (\r\n        <div className={style.pageButtonsContainer}>\r\n            { portionNumber >= 1 &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber - 1)}} className={style.button} disabled={portionNumber === 1}>Prev pages</button>\r\n            }\r\n            {\r\n                pagesArray.filter((page)=> page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                    .map((page) => {\r\n                    return (\r\n                        <button key={page} onClick={() => {\r\n                            onPageChanged(page)\r\n                        }}\r\n                                className={page === currentPage ? `${style.pageButton} ${style.current}` : style.pageButton}>{page}\r\n                        </button>\r\n                    )\r\n                })\r\n            }\r\n            { portionCount >= portionNumber &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber + 1)}} className={style.button} disabled={portionNumber === portionCount}>Next pages</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport style from \"./userCard.module.css\"\r\nimport photo from \"./img/userUnknown.png\"\r\nimport Pagination from \"./pagination/pagination\"\r\nimport {IUserCardProps, UsersArrayItemType} from \"../../types/types\"\r\n\r\n\r\nconst UserCard: React.FC<IUserCardProps> = React.memo(({\r\n                                                           onPageChanged,\r\n                                                           totalUsers,\r\n                                                           usersOnPage,\r\n                                                           currentPage,\r\n                                                           findUsers,\r\n                                                           setFollow,\r\n                                                           setUnfollow,\r\n                                                           isFollowingInProgress\r\n                                                       }) => {\r\n\r\n    return (\r\n\r\n        <div className={style.cardContainer}>\r\n\r\n            <Pagination onPageChanged={onPageChanged}\r\n                        totalUsers={totalUsers}\r\n                        usersOnPage={usersOnPage}\r\n                        currentPage={currentPage}\r\n                        pageSize={10}\r\n            />\r\n\r\n            {\r\n                findUsers.map((user:UsersArrayItemType) => {\r\n\r\n                    const toUnfollow = () => {\r\n                        setUnfollow(user.id, false);\r\n                    }\r\n\r\n                    const toFollow = () => {\r\n                        setFollow(user.id, true);\r\n                    }\r\n\r\n                    return (\r\n\r\n                        <div key={user.id} className={style.wrapper}>\r\n\r\n                            <div className={style.avatar_container}>\r\n                                <img className={style.photo}\r\n                                     src={user.photos.small !== null ? user.photos.small : photo} alt=\"\"/>\r\n                                {(user.followed) ?\r\n                                    <button disabled={isFollowingInProgress.some((id: number) => id === user.id)} onClick={toUnfollow} className={style.button} >Unfollow</button> :\r\n                                    <button disabled={isFollowingInProgress.some((id: number) => id === user.id)} onClick={toFollow} className={style.button}>Follow</button>}\r\n                                <NavLink to={`/profile/${user.id}`} className={style.linkToProfile}>Open\r\n                                    Profile</NavLink>\r\n                            </div>\r\n\r\n                            <div className={style.user_description}>\r\n\r\n                                <div className={style.left_description}>\r\n                                    <h3>{user.name}</h3>\r\n                                    <p>{\"props.user.status\"}</p>\r\n                                </div>\r\n\r\n                                <div className={style.right_description}>\r\n                                    <p>{\"props.user.location.country\"},</p>\r\n                                    <p>{\"props.user.location.city\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}, function isEqual(prevProps: IUserCardProps, nextProps: IUserCardProps) {\r\n    return prevProps === nextProps;\r\n})\r\n\r\nexport default UserCard;","import React from \"react\"\r\nimport {\r\n    getCurrentPageState,\r\n    getFindUsersState,\r\n    getIsFetchingState,\r\n    getIsFollowingInProgressState,\r\n    getTotalUsersState,\r\n    getUsersOnPageState\r\n} from \"../../redux/selectors\"\r\nimport UserCard from \"./userCard\"\r\nimport {connect} from \"react-redux\"\r\nimport Loading from \"../commons/loading/loading\"\r\nimport {AppStateType} from \"../../redux/reduxStore\"\r\nimport {IUsersContainerProps} from \"../../types/types\"\r\nimport {getUsers, setFollow, setUnfollow} from \"../../redux/findUsersReducer\"\r\n\r\n\r\nclass UsersContainer extends React.Component<IUsersContainerProps> {\r\n\r\n    onPageChanged = (page: number) => {\r\n        this.props.getUsers(page, this.props.usersOnPage);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.usersOnPage);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: IUsersContainerProps) {\r\n        return this.props !== nextProps;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Loading/> :<></>}\r\n                <UserCard {...this.props} onPageChanged={this.onPageChanged}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    //findUsers: getFindUsersStateRESELECT(state), используется при использовании сложной логики в селекторе, что бы оптимизировать рендеринг\r\n    findUsers: getFindUsersState(state),\r\n    currentPage: getCurrentPageState(state),\r\n    totalUsers: getTotalUsersState(state),\r\n    usersOnPage: getUsersOnPageState(state),\r\n    isFetching: getIsFetchingState(state),\r\n    isFollowingInProgress: getIsFollowingInProgressState(state),\r\n})\r\n\r\n\r\nconst FindUsersContainer = connect(mapStateToProps, {getUsers,setUnfollow,setFollow,})(UsersContainer)\r\n\r\nexport default FindUsersContainer","import React from \"react\"\r\nimport style from \"./findUsers.module.css\"\r\nimport FindUsersContainer from \"./findUsersContainer\"\r\nimport FriendsListContainer from \"../profile/profileContainer/friendsList/friendsListContainer\"\r\n\r\n\r\nconst FindUsers: React.FC = () => {\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.left_container}>\r\n                <FindUsersContainer/>\r\n            </div>\r\n            <div className={style.right_container}>\r\n                <FriendsListContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindUsers"],"sourceRoot":""}